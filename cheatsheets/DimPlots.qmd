---
format: 
  html:
    include-after-body: ./plot_fold.html
---

# do_DimPlot()

```{r}
#| results: "asis"
#| echo: false
source("../_common.R")
```

```{r}
#| echo: false
sample <- readRDS("/b06x-isilon/b06x-g/G703/eblanco/projects/test_SC_datasets/sc_dataset.rds")
```


## Regular DimPlot

```{r}
#| fig-width: 10
#| fig-height: 11
SCpubr::do_DimPlot(sample = sample)
```

## Group by a variable

```{r}
#| fig-width: 10
#| fig-height: 11
SCpubr::do_DimPlot(sample = sample,
                   group.by = "annotation")
```

## Split by a variable

```{r}
#| fig-width: 20
#| fig-height: 11
SCpubr::do_DimPlot(sample = sample,
                   split.by = "annotation")
```

## Group by a variable and split by a second variable

```{r}
#| fig-width: 20
#| fig-height: 11
SCpubr::do_DimPlot(sample = sample,
                   group.by = "seurat_clusters",
                   split.by = "annotation")
```

## Restrict the identities shown to a subset.

```{r}
#| fig-width: 10
#| fig-height: 11
SCpubr::do_DimPlot(sample = sample,
                   idents.keep = c("0", "2"))
```

## Highlight cells

```{r}
#| fig-width: 10
#| fig-height: 11
# Highlight a given set of cells
SCpubr::do_DimPlot(sample = sample,
                   cells.highlight = sample(colnames(sample), 100))

```

```{r}
#| fig-width: 10
#| fig-height: 11
# Highlight a given identity from Seurat::Idents(sample).
SCpubr::do_DimPlot(sample = sample,
                   idents.highlight = "0")
```

A combination of `cells.highlight` and `idents.hightlight` also works!

## Select a dimensional reduction embedding

```{r}
#| fig-width: 10
#| fig-height: 11
SCpubr::do_DimPlot(sample = sample,
                   reduction = "pca")
```

## Select which dimensions to plot

```{r}
#| fig-width: 10
#| fig-height: 11
SCpubr::do_DimPlot(sample = sample,
                   reduction = "pca",
                   dims = c(1, 2))
```

Note that, by default, the dimensional reduction of choice is the **lastest computed** in the Seurat object.

## Add back the Axes

```{r}
#| fig-width: 10
#| fig-height: 11
SCpubr::do_DimPlot(sample = sample,
                   plot.axes = TRUE)
```

## Label the clusters

```{r}
#| fig-width: 10
#| fig-height: 11
# Label the clusters - label geom.
SCpubr::do_DimPlot(sample = sample,
                   label = TRUE)
```

```{r}
#| fig-width: 10
#| fig-height: 11
# Label the clusters - text geom.
SCpubr::do_DimPlot(sample = sample,
                   label = TRUE,
                   label.box = FALSE)
```

## Label the clusters and repel the labels

```{r}
#| fig-width: 10
#| fig-height: 11
# Label the clusters - label geom.
SCpubr::do_DimPlot(sample = sample,
                   label = TRUE,
                   repel = TRUE)
```

```{r}
#| fig-width: 10
#| fig-height: 11
# Label the clusters - text geom.
SCpubr::do_DimPlot(sample = sample,
                   label = TRUE,
                   label.box = FALSE,
                   repel = TRUE)
```

## Change the default colors

```{r}
#| fig-width: 10
#| fig-height: 11
# Define a set of colors.
colors <- c("0" = "#001219",
            "1" = "#005f73",
            "2" = "#0a9396",
            "3" = "#94d2bd",
            "4" = "#e9d8a6",
            "5" = "#ee9b00",
            "6" = "#ca6702",
            "7" = "#bb3e03",
            "8" = "#ae2012",
            "9" = "#9b2226")

# Label the clusters - text geom.
SCpubr::do_DimPlot(sample = sample,
                   colors.use = colors)
```

## And more!
Many more options are available for this function in @sec-common!
