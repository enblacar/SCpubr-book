continuous_feature = TRUE)
#| results: "asis"
#| echo: false
source("../_common.R")
suppressMessages(library("Seurat"))
#| echo: false
sample <- readRDS("/b06x-isilon/b06x-g/G703/eblanco/projects/test_SC_datasets/sc_dataset.rds")
#| fig-width: 10
#| fig-height: 10
SCpubr::do_BeeSwarmPlot(sample = sample,
feature_to_rank = "PC_1",
group.by = "seurat_clusters",
continuous_feature = TRUE)
#| fig-width: 10
#| fig-height: 10
SCpubr::do_BeeSwarmPlot(sample = sample,
feature_to_rank = "PC_1",
group.by = "seurat_clusters",
continuous_feature = FALSE)
#| results: "asis"
#| echo: false
source("../_common.R")
suppressMessages(library("Seurat"))
#| echo: false
sample <- readRDS("/b06x-isilon/b06x-g/G703/eblanco/projects/test_SC_datasets/sc_dataset.rds")
#| fig-width: 10
#| fig-height: 10
SCpubr::do_BeeSwarmPlot(sample = sample,
feature_to_rank = "PC_1",
group.by = "seurat_clusters",
continuous_feature = FALSE)
#| fig-width: 10
#| fig-height: 10
SCpubr::do_BeeSwarmPlot(sample = sample,
feature_to_rank = "PC_1",
continuous_feature = FALSE)
#| fig-width: 10
#| fig-height: 10
SCpubr::do_BeeSwarmPlot(sample = sample,
feature_to_rank = "PC_1",
continuous_feature = TRUE)
#| fig-width: 10
#| fig-height: 10
SCpubr::do_BeeSwarmPlot(sample = sample,
feature_to_rank = "PC_1",
order = TRUE)
#| results: "asis"
#| echo: false
source("_common.R")
#| echo: false
sample <- readRDS("/b06x-isilon/b06x-g/G703/eblanco/projects/test_SC_datasets/sc_dataset.rds")
#| fig-width: 10
#| fig-height: 5
p <- Seurat::VlnPlot(sample,
features = "nCount_RNA")
p
#| fig-width: 10
#| fig-height: 5
p <- Seurat::VlnPlot(sample,
features = "nCount_RNA")
# "Surgically" add the alpha parameter in the ggplot2 object.
p$layers[[2]]$aes_params$alpha <- 0.05
p
#| fig-width: 10
#| fig-height: 5
# Basic violin plot.
p <- SCpubr::do_ViolinPlot(sample = sample,
features = "nCount_RNA")
p
#| fig-width: 10
#| fig-height: 5
# Remove the box plots.
p <- SCpubr::do_ViolinPlot(sample = sample,
features = "nCount_RNA",
plot_boxplot = FALSE)
p
#| fig-width: 10
#| fig-height: 5
# Rotate x axis labels.
p <- SCpubr::do_ViolinPlot(sample = sample,
features = c("nCount_RNA"),
rotate_x_axis_labels = 45)
#| results: "asis"
#| echo: false
source("_common.R")
#| echo: false
sample <- readRDS("/b06x-isilon/b06x-g/G703/eblanco/projects/test_SC_datasets/sc_dataset.rds")
#| fig-width: 10
#| fig-height: 5
p <- Seurat::VlnPlot(sample,
features = "nCount_RNA")
p
#| fig-width: 10
#| fig-height: 5
p <- Seurat::VlnPlot(sample,
features = "nCount_RNA")
# "Surgically" add the alpha parameter in the ggplot2 object.
p$layers[[2]]$aes_params$alpha <- 0.05
p
#| fig-width: 10
#| fig-height: 5
# Basic violin plot.
p <- SCpubr::do_ViolinPlot(sample = sample,
features = "nCount_RNA")
p
#| fig-width: 10
#| fig-height: 5
# Remove the box plots.
p <- SCpubr::do_ViolinPlot(sample = sample,
features = "nCount_RNA",
plot_boxplot = FALSE)
p
#| fig-width: 10
#| fig-height: 5
# Rotate x axis labels.
p <- SCpubr::do_ViolinPlot(sample = sample,
features = c("nCount_RNA"),
axis.text.x.angle = 45)
p
#| fig-width: 10
#| fig-height: 5
# Add horizontal lines.
p <- SCpubr::do_ViolinPlot(sample = sample,
features = "nCount_RNA",
y_cut = 25000)
p
#| fig-width: 10
#| fig-height: 10
# Increase line width.
p1 <- SCpubr::do_ViolinPlot(sample = sample,
features = "nCount_RNA")
p2 <- SCpubr::do_ViolinPlot(sample = sample,
features = "nCount_RNA",
line_width = 2)
p <- p1 / p2
p
#| fig-width: 10
#| fig-height: 10
# Decrease boxplot width.
p1 <- SCpubr::do_ViolinPlot(sample = sample,
features = "nCount_RNA")
p2 <- SCpubr::do_ViolinPlot(sample = sample,
features = "nCount_RNA",
boxplot_width = 0.1)
p <- p1 / p2
p
#| fig-width: 10
#| fig-height: 10
# Share the same Y axis.
p <- SCpubr::do_ViolinPlot(sample = sample,
features = c("nCount_RNA", "nFeature_RNA"),
ncol = 1,
share.y.lims = TRUE)
p
#| fig-width: 10
#| fig-height: 5
# Split violin plots.
sample$orig.ident <- sample(c("A", "B"),
ncol(sample),
replace = TRUE)
p<- SCpubr::do_ViolinPlot(sample = sample,
features = "nCount_RNA",
split.by = "orig.ident",
plot_boxplot = FALSE,
legend.position = "bottom")
p
#| fig-width: 10
#| fig-height: 5
p <- SCpubr::do_ViolinPlot(sample = sample,
features = "nCount_RNA",
split.by = "annotation",
plot_boxplot = FALSE,
legend.position = "bottom")
p
#| fig-width: 10
#| fig-height: 5
p <- SCpubr::do_ViolinPlot(sample = sample,
features = "nCount_RNA",
split.by = "annotation",
plot_boxplot = FALSE)
p
#| fig-width: 10
#| fig-height: 5
# Remove the box plots.
p <- SCpubr::do_ViolinPlot(sample = sample,
features = "nCount_RNA",
plot_boxplot = FALSE)
p
#| echo: false
sample <- readRDS("/b06x-isilon/b06x-g/G703/eblanco/projects/test_SC_datasets/sc_dataset.rds")
#| fig-width: 10
#| fig-height: 5
# Basic violin plot.
p <- SCpubr::do_ViolinPlot(sample = sample,
features = "nCount_RNA")
p
#| fig-width: 10
#| fig-height: 5
# Remove the box plots.
p <- SCpubr::do_ViolinPlot(sample = sample,
features = "nCount_RNA",
plot_boxplot = FALSE)
p
#| fig-width: 10
#| fig-height: 5
# Remove the box plots.
p <- SCpubr::do_ViolinPlot(sample = sample,
features = "nCount_RNA",
plot_boxplot = FALSE)
p
#| results: "asis"
#| echo: false
source("../_common.R")
suppressMessages(library("Seurat"))
#| echo: false
sample <- readRDS("/b06x-isilon/b06x-g/G703/eblanco/projects/test_SC_datasets/sc_dataset.rds")
#| fig-width: 10
#| fig-height: 7
# Basic box plot.
p <- SCpubr::do_BoxPlot(sample = sample,
feature = "nCount_RNA")
p
#| fig-width: 10
#| fig-height: 7
# Generate a custom group.
sample$custom_group = ifelse(colnames(sample) %in% sample(colnames(sample), 4000), "A", "B")
# Use custom grouping.
p <- SCpubr::do_BoxPlot(sample = sample,
feature = "nCount_RNA",
group.by = "custom_group")
p
#| fig-width: 10
#| fig-height: 7
#| fig-cap: "Flip the axes."
# Flip the box plot.
p <- SCpubr::do_BoxPlot(sample = sample,
feature = "nCount_RNA",
flip = TRUE)
p
#| fig-width: 10
#| fig-height: 7
# Use silhouette style.
p <- SCpubr::do_BoxPlot(sample = sample,
feature = "nCount_RNA",
use_silhouette = TRUE)
p
#| fig-width: 10
#| fig-height: 7
# Order by mean values.
p <- SCpubr::do_BoxPlot(sample = sample,
feature = "nCount_RNA",
order = TRUE)
p
#| fig-width: 10
#| fig-height: 7
# Apply second grouping.
p <- SCpubr::do_BoxPlot(sample = sample,
feature = "nCount_RNA",
split.by = "custom_group")
p
#| fig-width: 10
#| fig-height: 7
# Apply statistical tests.
p <- SCpubr::do_BoxPlot(sample = sample,
feature = "nCount_RNA",
use_test = TRUE,
comparisons = list(c("0", "1"),
c("3", "4"),
c("5", "9")))
p
#| fig-width: 10
#| fig-height: 7
# Apply statistical tests and show the p-value.
p <- SCpubr::do_BoxPlot(sample = sample,
feature = "nCount_RNA",
use_test = TRUE,
comparisons = list(c("0", "1"),
c("3", "4"),
c("5", "9")),
map_signif_level = FALSE)
p
#| fig-width: 10
#| fig-height: 7
SCpubr::do_BoxPlot(sample = sample,
feature = "nCount_RNA",
group.by = "annotation")
#| fig-width: 10
#| fig-height: 7
SCpubr::do_BoxPlot(sample = sample,
feature = "nCount_RNA",
use_silhouette = TRUE)
#| fig-width: 10
#| fig-height: 7
SCpubr::do_BoxPlot(sample = sample,
feature = "nCount_RNA",
order = TRUE)
#| fig-width: 10
#| fig-height: 7
# Apply second grouping.
SCpubr::do_BoxPlot(sample = sample,
feature = "nCount_RNA",
split.by = "custom_group")
#| fig-width: 10
#| fig-height: 7
SCpubr::do_BoxPlot(sample = sample,
feature = "nCount_RNA",
split.by = "annotation")
#| fig-width: 10
#| fig-height: 7
SCpubr::do_BoxPlot(sample = sample,
feature = "nCount_RNA",
use_test = TRUE,
comparisons = list(c("0", "1"),
c("3", "4"),
c("5", "9")))
#| results: "asis"
#| echo: false
source("../_common.R")
suppressMessages(library("Seurat"))
#| echo: false
sample <- readRDS("/b06x-isilon/b06x-g/G703/eblanco/projects/test_SC_datasets/sc_dataset.rds")
#| fig-width: 10
#| fig-height: 7
SCpubr::do_BoxPlot(sample = sample,
feature = "nCount_RNA")
#| fig-width: 10
#| fig-height: 7
SCpubr::do_BoxPlot(sample = sample,
feature = "nCount_RNA",
group.by = "annotation")
#| fig-width: 10
#| fig-height: 7
SCpubr::do_BoxPlot(sample = sample,
feature = "nCount_RNA",
use_silhouette = TRUE)
#| fig-width: 10
#| fig-height: 7
SCpubr::do_BoxPlot(sample = sample,
feature = "nCount_RNA",
order = TRUE)
#| fig-width: 10
#| fig-height: 7
SCpubr::do_BoxPlot(sample = sample,
feature = "nCount_RNA",
split.by = "annotation")
#| fig-width: 10
#| fig-height: 7
SCpubr::do_BoxPlot(sample = sample,
feature = "nCount_RNA",
use_test = TRUE,
comparisons = list(c("0", "1"),
c("3", "4"),
c("5", "9")))
#| echo: false
sample <- readRDS("/b06x-isilon/b06x-g/G703/eblanco/projects/test_SC_datasets/sc_dataset.rds")
#| fig-width: 10
#| fig-height: 7
# Use silhouette style.
p <- SCpubr::do_BoxPlot(sample = sample,
feature = "nCount_RNA",
use_silhouette = TRUE)
p
#| echo: false
sample <- readRDS("/b06x-isilon/b06x-g/G703/eblanco/projects/test_SC_datasets/sc_dataset.rds")
#| fig-width: 10
#| fig-height: 7
# Use silhouette style.
p <- SCpubr::do_BoxPlot(sample = sample,
feature = "nCount_RNA",
use_silhouette = TRUE)
p
#| echo: false
sample <- readRDS("/b06x-isilon/b06x-g/G703/eblanco/projects/test_SC_datasets/sc_dataset.rds")
#| fig-width: 10
#| fig-height: 7
# Basic box plot.
p <- SCpubr::do_BoxPlot(sample = sample,
feature = "nCount_RNA")
p
#| fig-width: 10
#| fig-height: 7
# Use silhouette style.
p <- SCpubr::do_BoxPlot(sample = sample,
feature = "nCount_RNA",
use_silhouette = TRUE)
p
#| results: "asis"
#| echo: false
source("../_common.R")
#| echo: false
sample <- readRDS("/b06x-isilon/b06x-g/G703/eblanco/projects/test_SC_datasets/sc_dataset.rds")
#| fig-width: 10
#| fig-height: 5
# Seurat's dot plot.
p <- Seurat::DotPlot(sample,
features = "CD14")
p
#| fig-width: 10
#| fig-height: 5
# SCpubr's dot plot.
p <- SCpubr::do_DotPlot(sample = sample,
features = "CD14")
p
#| fig-width: 10
#| fig-height: 5
genes <- c("IL7R", "CCR7", "CD14", "LYZ",
"S100A4", "MS4A1", "CD8A", "FCGR3A",
"MS4A7", "GNLY", "NKG7", "FCER1A",
"CST3", "PPBP")
p <- SCpubr::do_DotPlot(sample = sample,
features = genes)
p
#| fig-width: 18
#| fig-height: 8
genes <- list("Naive CD4+ T" = c("IL7R", "CCR7"),
"CD14+ Mono" = c("CD14", "LYZ"),
"Memory CD4+" = c("S100A4"),
"B" = c("MS4A1"),
"CD8+ T" = c("CD8A"),
"FCGR3A+ Mono" = c("FCGR3A", "MS4A7"),
"NK" = c("GNLY", "NKG7"),
"DC" = c("FCER1A", "CST3"),
"Platelet" = c("PPBP"))
p <- SCpubr::do_DotPlot(sample = sample,
features = genes)
p
#| fig-width: 18
#| fig-height: 14
p1 <- SCpubr::do_DotPlot(sample = sample,
features = genes,
plot.title = "Not clustered")
p2 <- SCpubr::do_DotPlot(sample = sample,
features = genes,
cluster.idents = TRUE,
plot.title = "Clustered")
#| fig-width: 18
#| fig-height: 14
p1 <- SCpubr::do_DotPlot(sample = sample,
features = genes,
plot.title = "Not clustered")
p2 <- SCpubr::do_DotPlot(sample = sample,
features = genes,
cluster = TRUE,
plot.title = "Clustered")
p <- p1 / p2
p
#| fig-width: 18
#| fig-height: 7
p <- SCpubr::do_DotPlot(sample = sample,
features = genes,
cluster = TRUE)
p
#| fig-width: 14
#| fig-height: 7
genes <- c("IL7R", "CCR7", "CD14", "LYZ",
"S100A4", "MS4A1", "CD8A", "FCGR3A",
"MS4A7", "GNLY", "NKG7", "FCER1A",
"CST3", "PPBP")
p1 <- SCpubr::do_DotPlot(sample = sample,
features = genes,
plot.title = "Not clustered",
flip = TRUE)
p2 <- SCpubr::do_DotPlot(sample = sample,
features = genes,
cluster.idents = TRUE,
plot.title = "Clustered",
flip = TRUE,
rotate_x_axis_labels = 45)
#| fig-width: 14
#| fig-height: 7
genes <- c("IL7R", "CCR7", "CD14", "LYZ",
"S100A4", "MS4A1", "CD8A", "FCGR3A",
"MS4A7", "GNLY", "NKG7", "FCER1A",
"CST3", "PPBP")
p1 <- SCpubr::do_DotPlot(sample = sample,
features = genes,
plot.title = "Not clustered",
flip = TRUE)
p2 <- SCpubr::do_DotPlot(sample = sample,
features = genes,
cluster = TRUE,
plot.title = "Clustered",
flip = TRUE,
axis.text.x.angle = 45)
p <- p1 | p2
p
?SCpubr::do_DotPlot
#| fig-width: 10
#| fig-height: 5
genes <- c("IL7R", "CCR7", "CD14", "LYZ",
"S100A4", "MS4A1", "CD8A", "FCGR3A",
"MS4A7", "GNLY", "NKG7", "FCER1A",
"CST3", "PPBP")
p <- SCpubr::do_DotPlot(sample = sample,
features = genes,
cluster = TRUE,
dot.scale = 8)
p
SCpubr::do_DotPlot(sample = sample,
features = genes,
cluster = TRUE,
dot.scale = 8, scale = TRUE)
SCpubr::do_DotPlot(sample = sample,
features = genes,
cluster = TRUE,
dot.scale = 8, scale = TRUE) | SCpubr::do_DotPlot(sample = sample,
features = genes,
cluster = TRUE,
dot.scale = 8, scale = FALSE
)
SCpubr::package_report(startup = TRUE, extended = TRUE
)
