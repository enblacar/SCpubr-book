features = "PC_1",
pt.size = 0.5,
use_viridis = TRUE,
viridis.palette = "A",
viridis.direction = 1)
p2 <- SCpubr::do_FeaturePlot(sample,
features = "PC_1",
pt.size = 0.5,
use_viridis = TRUE,
viridis.palette = "B",
viridis.direction = -1)
p3 <- SCpubr::do_FeaturePlot(sample,
features = "PC_1",
pt.size = 0.5,
use_viridis = TRUE,
viridis.palette = "C",
viridis.direction = 1)
p4 <- SCpubr::do_FeaturePlot(sample,
features = "PC_1",
pt.size = 0.5,
use_viridis = TRUE,
viridis.palette = "D",
viridis.direction = -1)
p5 <- SCpubr::do_FeaturePlot(sample,
features = "PC_1",
pt.size = 0.5,
use_viridis = TRUE,
viridis.palette = "E",
viridis.direction = 1)
p6 <- SCpubr::do_FeaturePlot(sample,
features = "PC_1",
pt.size = 0.5,
use_viridis = TRUE,
viridis.palette = "F",
viridis.direction = -1)
p7 <- SCpubr::do_FeaturePlot(sample,
features = "PC_1",
pt.size = 0.5,
use_viridis = TRUE,
viridis.palette = "G",
viridis.direction = 1)
p8 <- SCpubr::do_FeaturePlot(sample,
features = "PC_1",
pt.size = 0.5,
use_viridis = TRUE,
viridis.palette = "H",
viridis.direction = -1)
p <- (p1 | p2) / (p3 | p4) / (p5 | p6) / (p7 | p8)
p
p
p
p
p
p
p
p
3
p
p
p
#| fig-width: 20
#| fig-height: 40
#| fig-cap: "Modify viridis palettes, also use different directions."
p1 <- SCpubr::do_FeaturePlot(sample,
features = "PC_1",
pt.size = 0.5,
use_viridis = FALSE,
sequential.palette = "YlGnBu",
sequential.direction = 1)
p2 <- SCpubr::do_FeaturePlot(sample,
features = "PC_1",
pt.size = 0.5,
use_viridis = FALSE,
sequential.palette = "YlOrBr",
sequential.direction = 1)
p3 <- SCpubr::do_FeaturePlot(sample,
features = "PC_1",
pt.size = 0.5,
use_viridis = FALSE,
sequential.palette = "YlOrRd",
sequential.direction = 1)
p4 <- SCpubr::do_FeaturePlot(sample,
features = "PC_1",
pt.size = 0.5,
use_viridis = FALSE,
sequential.palette = "Reds",
sequential.direction = 1)
p5 <- SCpubr::do_FeaturePlot(sample,
features = "PC_1",
pt.size = 0.5,
use_viridis = TRUE,
viridis.palette = "Purples",
viridis.direction = 1)
#| fig-width: 20
#| fig-height: 40
#| fig-cap: "Modify viridis palettes, also use different directions."
p1 <- SCpubr::do_FeaturePlot(sample,
features = "PC_1",
pt.size = 0.5,
use_viridis = FALSE,
sequential.palette = "YlGnBu",
sequential.direction = 1)
p2 <- SCpubr::do_FeaturePlot(sample,
features = "PC_1",
pt.size = 0.5,
use_viridis = FALSE,
sequential.palette = "YlOrBr",
sequential.direction = 1)
p3 <- SCpubr::do_FeaturePlot(sample,
features = "PC_1",
pt.size = 0.5,
use_viridis = FALSE,
sequential.palette = "YlOrRd",
sequential.direction = 1)
p4 <- SCpubr::do_FeaturePlot(sample,
features = "PC_1",
pt.size = 0.5,
use_viridis = FALSE,
sequential.palette = "Reds",
sequential.direction = 1)
p5 <- SCpubr::do_FeaturePlot(sample,
features = "PC_1",
pt.size = 0.5,
use_viridis = FALSE,
sequential.palette = "Purples",
sequential.direction = 1)
p6 <- SCpubr::do_FeaturePlot(sample,
features = "PC_1",
pt.size = 0.5,
use_viridis = FALSE,
sequential.palette = "Blues",
sequential.direction = -1)
p7 <- SCpubr::do_FeaturePlot(sample,
features = "PC_1",
pt.size = 0.5,
use_viridis = FALSE,
sequential.palette = "Oranges",
sequential.direction = 1)
p8 <- SCpubr::do_FeaturePlot(sample,
features = "PC_1",
pt.size = 0.5,
use_viridis = FALSE,
sequential.palette = "Greys",
sequential.direction = 1)
p <- (p1 | p2) / (p3 | p4) / (p5 | p6) / (p7 | p8)
p
p
p
#| fig-width: 20
#| fig-height: 40
#| fig-cap: "Modify viridis palettes, also use different directions."
p1 <- SCpubr::do_FeaturePlot(sample,
features = "PC_1",
pt.size = 0.5,
use_viridis = FALSE,
enforce_symmetry = TRUE,
diverging.palette = "Spectral")
p2 <- SCpubr::do_FeaturePlot(sample,
features = "PC_1",
pt.size = 0.5,
use_viridis = FALSE,
enforce_symmetry = TRUE,
diverging.palette = "RdYlBu")
p3 <- SCpubr::do_FeaturePlot(sample,
features = "PC_1",
pt.size = 0.5,
use_viridis = FALSE,
enforce_symmetry = TRUE,
diverging.palette = "RdYlGn")
p4 <- SCpubr::do_FeaturePlot(sample,
features = "PC_1",
pt.size = 0.5,
use_viridis = FALSE,
enforce_symmetry = TRUE,
diverging.palette = "RdBu")
p5 <- SCpubr::do_FeaturePlot(sample,
features = "PC_1",
pt.size = 0.5,
use_viridis = FALSE,
enforce_symmetry = TRUE,
diverging.palette = "RdGy")
p6 <- SCpubr::do_FeaturePlot(sample,
features = "PC_1",
pt.size = 0.5,
use_viridis = FALSE,
enforce_symmetry = TRUE,
diverging.palette = "PuOr")
p7 <- SCpubr::do_FeaturePlot(sample,
features = "PC_1",
pt.size = 0.5,
use_viridis = FALSE,
enforce_symmetry = TRUE,
diverging.palette = "PiYG")
p8 <- SCpubr::do_FeaturePlot(sample,
features = "PC_1",
pt.size = 0.5,
use_viridis = FALSE,
enforce_symmetry = TRUE,
diverging.palette = "BrBG")
p <- (p1 | p2) / (p3 | p4) / (p5 | p6) / (p7 | p8)
p
p
#| fig-width: 15
#| fig-height: 8
#| fig-cap: "Flip the axes"
p <- SCpubr::do_BarPlot(sample = sample,
group.by = "seurat_clusters",
split.by = "annotation",
position = "fill")
p
#| fig-width: 15
#| fig-height: 8
#| fig-cap: "Flip the axes"
p1 <- SCpubr::do_BarPlot(sample = sample,
group.by = "seurat_clusters",
split.by = "annotation",
position = "fill",
flip = FALSE)
p1 <- SCpubr::do_BarPlot(sample = sample,
group.by = "seurat_clusters",
split.by = "annotation",
position = "fill",
flip = TRUE)
p <- p1 | p2
p
p2 <- SCpubr::do_BarPlot(sample = sample,
group.by = "seurat_clusters",
split.by = "annotation",
position = "fill",
flip = TRUE)
p <- p1 | p2
p
p1 <- SCpubr::do_BarPlot(sample = sample,
group.by = "seurat_clusters",
split.by = "annotation",
position = "fill",
flip = FALSE)
p <- p1 | p2
p
?SCpubr::do_DimPlot
#| results: "asis"
#| echo: false
source("_common.R")
suppressMessages(library("Seurat"))
#| echo: false
sample <- readRDS("/b06x-isilon/b06x-g/G703/eblanco/projects/test_SC_datasets/sc_dataset.rds")
#| fig-width: 10
#| fig-height: 11
#| fig-cap: "Basic usage"
p <- SCpubr::do_FeaturePlot(sample = sample,
features = "PC_1")
p
#| fig-width: 10
#| fig-height: 11
#| fig-cap: "Basic usage"
p1 <- SCpubr::do_FeaturePlot(sample = sample,
features = "PC_1",
min.cutoff = 0)
p2 <- SCpubr::do_FeaturePlot(sample = sample,
features = "PC_1",
min.cutoff = 0)
p <- p1 | p2
p
p2 <- SCpubr::do_FeaturePlot(sample = sample,
features = "PC_1",
max.cutoff = 0)
p <- p1 | p2
p
``
#| fig-width: 20
#| fig-height: 11
#| fig-cap: "Plot multiple features"
# Use a vector of cells
p1 <- SCpubr::do_FeaturePlot(sample = sample,
features = c("PC_1"),
cells.highlight = sample(colnames(sample), 500))
# Select identities.
p2 <- SCpubr::do_FeaturePlot(sample = sample,
features = c("PC_1"),
idents.highlight = c("0", "2", "5"))
p <- p1 | p2
p
levels(sample)
#| fig-width: 50
#| fig-height: 21
# Use a vector of cells
p <- SCpubr::do_FeaturePlot(sample = sample,
features = c("PC_1"),
split.by = "seurat_clusters",
ncol = 5)
p
#| fig-width: 30
#| fig-height: 11
# Use a vector of cells
p <- SCpubr::do_FeaturePlot(sample = sample,
features = c("PC_1"),
split.by = "seurat_clusters",
split.by.idents = c("0", "5", "7"),
ncol = 3)
p
#| fig-width: 30
#| fig-height: 11
# Use a vector of cells
p <- SCpubr::do_FeaturePlot(sample = sample,
features = c("PC_1"),
split.by = "seurat_clusters",
idents.keep = c("0", "5", "7"),
ncol = 3)
p
#| eval: false
colors <- list("seurat_clusters" = c("0" = "#001219",
"1" = "#005f73",
"2" = "#0a9396",
"3" = "#94d2bd",
"4" = "#e9d8a6",
"5" = "#ee9b00",
"6" = "#ca6702",
"7" = "#bb3e03",
"8" = "#ae2012",
"9" = "#9b2226"),
"annotation" = c("A" = "#ca6702",
"B" = "#0a9396"))
SCpubr::do_SCExpressionHeatmap(sample,
features = Seurat::VariableFeatures(sample)[1:20],
metadata = c("seurat_clusters", "annotation"),
metadata.colors = colors)
SCpubr::do_SCExpressionHeatmap(sample,
features = Seurat::VariableFeatures(sample)[1:20],
metadata = c("seurat_clusters", "annotation"),
metadata.colors = colors)
#| fig-width: 20
#| fig-height: 22
p1 <- SCpubr::do_FeaturePlot(sample,
features = "PC_1",
use_viridis = TRUE,
viridis.palette = "C",
viridis.direction = -1)
p2 <- SCpubr::do_FeaturePlot(sample,
features = "PC_1",
use_viridis = TRUE,
viridis.palette = "C",
viridis.direction = 1)
p3 <- SCpubr::do_FeaturePlot(sample,
features = "PC_1",
use_viridis = FALSE,
sequential.palette = "YlGnBu",
sequential.direction = -1)
p4 <- SCpubr::do_FeaturePlot(sample,
features = "PC_1",
sequential.palette = "YlGnBu",
sequential.direction = 1)
p <- (p1 | p2) / (p3 | p4)
p
p
p4 <- SCpubr::do_FeaturePlot(sample,
features = "PC_1",
use_viridis = FALSE,
sequential.palette = "YlGnBu",
sequential.direction = 1)
p <- (p1 | p2) / (p3 | p4)
p
p
p1 <- SCpubr::do_FeaturePlot(sample,
features = "PC_1",
enforce_symmetry = TRUE,
diverging.palette = "RdBu")
p2 <- SCpubr::do_FeaturePlot(sample,
features = "PC_1",
enforce_symmetry = TRUE,
diverging.palette = "PuOr")
p <- p1 | p2
p
p
#| fig-width: 20
#| fig-height: 11
genes <- list("A" = Seurat::VariableFeatures(sample)[1:20],
"B" = Seurat::VariableFeatures(sample)[21:40],
"C" = Seurat::VariableFeatures(sample)[41:60],
"D" = Seurat::VariableFeatures(sample)[61:80])
p1 <- SCpubr::do_CellularStatesPlot(sample,
input_gene_list = genes,
x1 = "A",
x2 = "B",
y1 = "C",
y2 = "D",
enforce_symmetry = FALSE)
p2 <- SCpubr::do_CellularStatesPlot(sample,
input_gene_list = genes,
x1 = "A",
x2 = "B",
y1 = "C",
y2 = "D",
enforce_symmetry = TRUE)
p <- p1 | p2
p
p
a
#| echo: false
sample <- readRDS("/b06x-isilon/b06x-g/G703/eblanco/projects/test_SC_datasets/sc_dataset.rds")
#| fig-width: 20
#| fig-height: 11
p1 <- SCpubr::do_FeaturePlot(sample,
features = "PC_1",
enforce_symmetry = FALSE)
p2 <- SCpubr::do_FeaturePlot(sample,
features = "PC_1",
enforce_symmetry = TRUE)
p <- p1 | p2
p
#| fig-width: 20
#| fig-height: 11
p1 <- SCpubr::do_FeaturePlot(sample = sample,
features = "PC_1",
min.cutoff = 0)
p2 <- SCpubr::do_FeaturePlot(sample = sample,
features = "PC_1",
max.cutoff = 0)
p <- p1 | p2
p
#| fig-width: 20
#| fig-height: 11
p1 <- SCpubr::do_BarPlot(sample = sample,
group.by = "seurat_clusters",
split.by = "annotation",
position = "fill",
flip = FALSE)
p2 <- SCpubr::do_BarPlot(sample = sample,
group.by = "seurat_clusters",
split.by = "annotation",
position = "fill",
flip = TRUE)
p <- p1 | p2
p
#| fig-width: 20
#| fig-height: 11
SCpubr::do_BarPlot(sample = sample,
group.by = "seurat_clusters",
split.by = "annotation",
position = "fill",
flip = TRUE,
plot.title = "This is a title",
plot.subtitle = "This is a subtitle",
plot.caption = "This is a caption",
xlab = "My X axis title",
ylab = "My Y axis title",
legend.title = "My custom title")
#| fig-width: 20
#| fig-height: 11
SCpubr::do_BarPlot(sample = sample,
group.by = "seurat_clusters",
split.by = "annotation",
position = "fill",
flip = TRUE,
plot.title = "This is a title",
plot.subtitle = "This is a subtitle",
plot.caption = "This is a caption",
xlab = "My X axis title",
ylab = "My Y axis title",
legend.title = "My custom title",
plot.title.face = "italic",
plot.subtitle.face = "bold.italic",
plot.caption.face = "bold",
axis.title.face = "italic",
axis.text.face = "plain",
legend.title.face = "italic",
legend.text.face = "bold.italic",
font.type = "mono",
font.size = 8)
#| fig-width: 20
#| fig-height: 11
SCpubr::do_BarPlot(sample = sample,
group.by = "seurat_clusters",
split.by = "annotation",
position = "fill",
flip = TRUE,
plot.title = "This is a title",
plot.subtitle = "This is a subtitle",
plot.caption = "This is a caption",
xlab = "My X axis title",
ylab = "My Y axis title",
legend.title = "My custom title",
plot.title.face = "italic",
plot.subtitle.face = "bold.italic",
plot.caption.face = "bold",
axis.title.face = "italic",
axis.text.face = "plain",
legend.title.face = "italic",
legend.text.face = "bold.italic",
font.type = "mono",
font.size = 20)
#| fig-width: 20
#| fig-height: 11
SCpubr::do_BarPlot(sample = sample,
group.by = "seurat_clusters",
split.by = "annotation",
position = "fill",
flip = TRUE,
plot.title = "This is a title",
plot.subtitle = "This is a subtitle",
plot.caption = "This is a caption",
xlab = "My X axis title",
ylab = "My Y axis title",
legend.title = "My custom title",
plot.title.face = "italic",
plot.subtitle.face = "bold.italic",
plot.caption.face = "bold",
axis.title.face = "italic",
axis.text.face = "plain",
legend.title.face = "italic",
legend.text.face = "bold.italic",
font.type = "mono",
font.size = 15)
