options(enrichR.sites = c("Enrichr", "FlyEnrichr", "WormEnrichr", "YeastEnrichr", "FishEnrichr"))
# Set the search to Human genes.
enrichR::setEnrichrSite(site = site)
websiteLive <- TRUE
dbs <- enrichR::listEnrichrDbs()
# Get all the possible databases to query.
dbs <- sort(dbs$libraryName)
})
# Set necessary enrichR global options. This is copied from EnrichR code to avoid having to load the package.
suppressMessages({
options(enrichR.base.address = "https://maayanlab.cloud/Enrichr/")
options(enrichR.live = TRUE)
options(modEnrichR.use = TRUE)
options(enrichR.sites.base.address = "https://maayanlab.cloud/")
options(enrichR.sites = c("Enrichr", "FlyEnrichr", "WormEnrichr", "YeastEnrichr", "FishEnrichr"))
# Set the search to Human genes.
enrichR::setEnrichrSite(site = "Enrichr")
websiteLive <- TRUE
dbs <- enrichR::listEnrichrDbs()
# Get all the possible databases to query.
dbs <- sort(dbs$libraryName)
})
# Choose the dataset to query against.
dbs_use <- "GO_Biological_Process_2021"
# List of genes to use as input.
genes <- c("ABCB1", "ABCG2", "AHR", "AKT1", "AR")
# Retrieve the enriched terms.
enriched_terms <- enrichR::enrichr(genes, dbs_use)
enriched_terms
class(enriched_terms)
names(enriched_terms)
enriched_terms <- SCpubr:::test.data$enriched_terms
enriched_terms <- SCpubr:::test.data$enriched_terms
# Increased number of terms.
p <- SCpubr::do_TermEnrichmentPlot(enriched_terms = enriched_terms$GO_Biological_Process_2021,
nterms = 15)
enriched_terms$GO_Biological_Process_2021
enriched_terms$GO_Cellular_Component_2021 <- NULL
enriched_terms$Azimuth_Cell_Types_2021 <- NULL
# Increased number of terms.
p <- SCpubr::do_TermEnrichmentPlot(enriched_terms = enriched_terms,
nterms = 15)
p
sample <- readRDS("/b06x-isilon/b06x-g/G703/eblanco/projects/test_SC_datasets/sc_dataset.rds")
de_genes <- readRDS("/b06x-isilon/b06x-g/G703/eblanco/projects/test_SC_datasets/pairwise_de_genes.rds")
# Generate a volcano plot.
p <- SCpubr::do_VolcanoPlot(sample = sample,
de_genes = de_genes)
sample <- readRDS("/b06x-isilon/b06x-g/G703/eblanco/projects/test_SC_datasets/sc_dataset.rds")
de_genes <- readRDS("/b06x-isilon/b06x-g/G703/eblanco/projects/test_SC_datasets/pairwise_de_genes.rds")
# Generate a volcano plot.
p <- SCpubr::do_VolcanoPlot(sample = sample,
de_genes = de_genes)
p
# Modify cutoffs.
p <- SCpubr::do_VolcanoPlot(sample = sample,
de_genes = de_genes,
pval_cutoff = 1e-15,
FC_cutoff = 0.2)
p
# Modify number of gene tags.
p <- SCpubr::do_VolcanoPlot(sample = sample,
de_genes = de_genes,
n_genes = 15)
p
sample <- readRDS("/b06x-isilon/b06x-g/G703/eblanco/projects/test_SC_datasets/sc_dataset.rds")
de_genes <- readRDS("/b06x-isilon/b06x-g/G703/eblanco/projects/test_SC_datasets/pairwise_de_genes.rds")
# Generate a volcano plot.
p <- SCpubr::do_VolcanoPlot(sample = sample,
de_genes = de_genes)
p
# Modify cutoffs.
p <- SCpubr::do_VolcanoPlot(sample = sample,
de_genes = de_genes,
pval_cutoff = 1e-15,
FC_cutoff = 0.2)
p
# Modify number of gene tags.
p <- SCpubr::do_VolcanoPlot(sample = sample,
de_genes = de_genes,
n_genes = 15)
p
sample <- readRDS("/b06x-isilon/b06x-g/G703/eblanco/projects/test_SC_datasets/sc_dataset.rds")
de_genes <- readRDS("/b06x-isilon/b06x-g/G703/eblanco/projects/test_SC_datasets/pairwise_de_genes.rds")
# Generate a volcano plot.
p <- SCpubr::do_VolcanoPlot(sample = sample,
de_genes = de_genes)
p
# Modify cutoffs.
p <- SCpubr::do_VolcanoPlot(sample = sample,
de_genes = de_genes,
pval_cutoff = 1e-15,
FC_cutoff = 0.2)
p
# Modify number of gene tags.
p <- SCpubr::do_VolcanoPlot(sample = sample,
de_genes = de_genes,
n_genes = 15)
p
sample <- readRDS("/b06x-isilon/b06x-g/G703/eblanco/projects/test_SC_datasets/sc_dataset.rds")
de_genes <- readRDS("/b06x-isilon/b06x-g/G703/eblanco/projects/test_SC_datasets/pairwise_de_genes.rds")
# Generate a volcano plot.
p <- SCpubr::do_VolcanoPlot(sample = sample,
de_genes = de_genes)
p
# Modify cutoffs.
p <- SCpubr::do_VolcanoPlot(sample = sample,
de_genes = de_genes,
pval_cutoff = 1e-15,
FC_cutoff = 0.2)
p
# Modify number of gene tags.
p <- SCpubr::do_VolcanoPlot(sample = sample,
de_genes = de_genes,
n_genes = 15)
p
sample <- readRDS("/b06x-isilon/b06x-g/G703/eblanco/projects/test_SC_datasets/sc_dataset.rds")
de_genes <- readRDS("/b06x-isilon/b06x-g/G703/eblanco/projects/test_SC_datasets/pairwise_de_genes.rds")
# Generate a volcano plot.
p <- SCpubr::do_VolcanoPlot(sample = sample,
de_genes = de_genes)
p
# Modify cutoffs.
p <- SCpubr::do_VolcanoPlot(sample = sample,
de_genes = de_genes,
pval_cutoff = 1e-15,
FC_cutoff = 0.2)
p
# Modify cutoffs.
p <- SCpubr::do_VolcanoPlot(sample = sample,
de_genes = de_genes,
pval_cutoff = 0.0000001,
FC_cutoff = 0.2)
p
-log10(0.0000001)
-log10(0.0000000000000000000001)
-log10(0.0000000000000000000000000000000000)
-log10(0.00000000000000000000000000000000001)
# Modify cutoffs.
p <- SCpubr::do_VolcanoPlot(sample = sample,
de_genes = de_genes,
pval_cutoff = 0.00000000000000000000000000000000001,
FC_cutoff = 0.2)
p
# Modify cutoffs.
p <- SCpubr::do_VolcanoPlot(sample = sample,
de_genes = de_genes,
pval_cutoff = 0.05,
FC_cutoff = 0.2)
p
# Generate a volcano plot.
p <- SCpubr::do_VolcanoPlot(sample = sample,
de_genes = de_genes)
p
# Generate a volcano plot.
p <- SCpubr::do_VolcanoPlot(sample = sample,
de_genes = de_genes)
p
# Modify number of gene tags.
p <- SCpubr::do_VolcanoPlot(sample = sample,
de_genes = de_genes,
n_genes = 15)
p
# Modify cutoffs.
p <- SCpubr::do_VolcanoPlot(sample = sample,
de_genes = de_genes,
pval_cutoff = 1e-50,
FC_cutoff = 0.2)
p
-log10(1e-50)
SCpubr::do_VolcanoPlot(sample = sample,
de_genes = de_genes,
pval_cutoff = 1e-50,
FC_cutoff = 0.2) + ggplot2::geom_hline(yintercept = 200)
SCpubr::do_VolcanoPlot(sample = sample,
de_genes = de_genes,
pval_cutoff = 1e-50,
FC_cutoff = 0.2) + ggplot2::geom_hline(yintercept = -log10(0.05))
SCpubr::do_VolcanoPlot(sample = sample,
de_genes = de_genes,
pval_cutoff = 1e-50,
FC_cutoff = 0.2) + ggplot2::geom_hline(yintercept = -log10(1e-50))
sample <- readRDS("/b06x-isilon/b06x-g/G703/eblanco/projects/test_SC_datasets/sc_dataset.rds")
de_genes <- readRDS("/b06x-isilon/b06x-g/G703/eblanco/projects/test_SC_datasets/pairwise_de_genes.rds")
# Generate a volcano plot.
p <- SCpubr::do_VolcanoPlot(sample = sample,
de_genes = de_genes)
p
# Modify cutoffs.
p <- SCpubr::do_VolcanoPlot(sample = sample,
de_genes = de_genes,
pval_cutoff = 1e-50,
FC_cutoff = 0.2)
p
#| echo: false
sample <- readRDS("/b06x-isilon/b06x-g/G703/eblanco/projects/test_SC_datasets/sc_dataset.rds")
genes <- list("Naive CD4+ T" = c("IL7R", "CCR7"),
"CD14+ Mono" = c("CD14", "LYZ"),
"Memory CD4+" = c("S100A4"),
"B" = c("MS4A1"),
"CD8+ T" = c("CD8A"),
"FCGR3A+ Mono" = c("FCGR3A", "MS4A7"),
"NK" = c("GNLY", "NKG7"),
"DC" = c("FCER1A", "CST3"),
"Platelet" = c("PPBP"))
#| fig-width: 10
#| fig-height: 5
#| fig-cap: "Use a symmetrical color scale that is not viridis."
# Modifying the symmetrical scale non viridis.
p <- SCpubr::do_EnrichmentHeatmap(sample = sample,
input_gene_list = genes,
flip = TRUE,
cluster_cols = FALSE,
cluster_rows = TRUE,
cell_size = 7,
flavor = "UCell")
p
#| fig-width: 10
#| fig-height: 5
#| fig-cap: "Subset the color scale.."
# Subset the color scale.
p <- SCpubr::do_EnrichmentHeatmap(sample = sample,
input_gene_list = genes,
flip = TRUE,
cluster_cols = FALSE,
cluster_rows = TRUE,
cell_size = 7,
flavor = "UCell",
min.cutoff = 0.2,
max.cutoff = 0.7)
p
#| echo: false
sample <- readRDS("/b06x-isilon/b06x-g/G703/eblanco/projects/test_SC_datasets/inferCNV_metacells_website/sample_metacells.rds")
infercnv_object <- suppressMessages(readRDS("/b06x-isilon/b06x-g/G703/eblanco/projects/test_SC_datasets/inferCNV_metacells_website/output/run.final.infercnv_obj"))
library(Seurat)
#| echo: false
sample <- readRDS("/b06x-isilon/b06x-g/G703/eblanco/projects/test_SC_datasets/sc_dataset.rds")
activities <- readRDS("/b06x-isilon/b06x-g/G703/eblanco/projects/test_SC_datasets/progeny_scores_decoupleR.rds")
library(Seurat)
#| fig-width: 8
#| fig-height: 8
#| fig-cap: "Retrieve the heatmap output."
# General heatmap.
out <- SCpubr::do_PathwayActivityPlot(sample = sample,
activities = activities)
p <- out$heatmaps$average_scores
p
#| fig-width: 8
#| fig-height: 7
#| fig-cap: "Set scale limits"
# General heatmap.
out <- SCpubr::do_PathwayActivityPlot(sample = sample,
activities = activities,
min.cutoff = -1,
max.cutoff = 1)
p <- out$heatmaps$average_scores
p
#| fig-width: 8
#| fig-height: 7
#| fig-cap: "Effect of enforce_symmetry in min.cutoff and max.cutoff"
# Effect of enforce symmetry on the scale limits.
out <- SCpubr::do_PathwayActivityPlot(sample = sample,
activities = activities,
min.cutoff = -1.25,
max.cutoff = 1,
enforce_symmetry = TRUE)
p <- out$heatmaps$average_scores
p
#| fig-width: 14
#| fig-height: 8
#| fig-cap: "Retrieve the FeaturePlot output."
# Retrieve feature plots.
out <- SCpubr::do_PathwayActivityPlot(sample = sample,
activities = activities,
plot_FeaturePlots = TRUE)
p1 <- SCpubr::do_DimPlot(sample)
p2 <- out$feature_plots$EGFR
p <- p1 | p2
p
#| fig-width: 14
#| fig-height: 8
#| fig-cap: "Retrieve the Geyser plot output."
# Retrieve Geyser plots.
out <- SCpubr::do_PathwayActivityPlot(sample = sample,
activities = activities,
plot_GeyserPlots = TRUE)
p1 <- SCpubr::do_DimPlot(sample)
p2 <- out$geyser_plots$EGFR
p <- p1 | p2
p
#| fig-width: 14
#| fig-height: 16
#| fig-cap: "Apply a non-symmetrical color scale."
# Use non-symmetrical color scale.
out <- SCpubr::do_PathwayActivityPlot(sample = sample,
activities = activities,
plot_GeyserPlots = TRUE,
plot_FeaturePlots = TRUE,
enforce_symmetry = FALSE)
p1 <- out$feature_plots$EGFR
p2 <- out$geyser_plots$EGFR
out <- SCpubr::do_PathwayActivityPlot(sample = sample,
activities = activities,
plot_GeyserPlots = TRUE,
plot_FeaturePlots = TRUE,
enforce_symmetry = TRUE)
p3 <- out$feature_plots$EGFR
p4 <- out$geyser_plots$EGFR
p <- (p1 | p2) / (p3 | p4)
p
#| fig-width: 14
#| fig-height: 8
#| fig-cap: "Order by mean values."
# Not order Geyser plot by mean values.
out <- SCpubr::do_PathwayActivityPlot(sample = sample,
activities = activities,
plot_GeyserPlots = TRUE,
enforce_symmetry = TRUE,
geyser_order_by_mean = FALSE)
p1 <- out$geyser_plots$EGFR
out <- SCpubr::do_PathwayActivityPlot(sample = sample,
activities = activities,
plot_GeyserPlots = TRUE,
enforce_symmetry = TRUE,
geyser_order_by_mean = TRUE)
p2 <- out$geyser_plots$EGFR
p <- p1 | p2
p
#| fig-width: 14
#| fig-height: 8
#| fig-cap: "Color the geyser plot by another variable."
# Plot a third variable in Geyser plots.
out <- SCpubr::do_PathwayActivityPlot(sample = sample,
activities = activities,
plot_GeyserPlots = TRUE,
geyser_color.by = "seurat_clusters",
geyser_scale_type = "categorical")
#| fig-width: 14
#| fig-height: 8
#| fig-cap: "Split the heatmap."
# Split the heatmap by another variable.
sample$split.me <- ifelse(sample$seurat_clusters %in% c("0", "3", "7"), "Group A","Group B")
out <- SCpubr::do_PathwayActivityPlot(sample = sample,
activities = activities,
split.by = "split.me")
p <- out$heatmaps$average_scores
p
#| fig-width: 14
#| fig-height: 8
#| fig-cap: "Color the geyser plot by another variable."
# Plot a third variable in Geyser plots.
out <- SCpubr::do_PathwayActivityPlot(sample = sample,
activities = activities,
plot_GeyserPlots = TRUE,
geyser_color.by = "seurat_clusters",
geyser_scale_type = "categorical")
p1 <- out$geyser_plots$EGFR
out <- SCpubr::do_PathwayActivityPlot(sample = sample,
activities = activities,
plot_GeyserPlots = TRUE,
geyser_color.by = "nCount_RNA",
geyser_scale_type = "continuous")
p2 <- out$geyser_plots$EGFR
p <- p1 | p2
p
#| fig-width: 14
#| fig-height: 8
#| fig-cap: "Color the geyser plot by another variable."
# Plot a third variable in Geyser plots.
out <- SCpubr::do_PathwayActivityPlot(sample = sample,
activities = activities,
plot_GeyserPlots = TRUE,
geyser_color.by = "seurat_clusters",
geyser_scale_type = "categorical")
#| fig-width: 14
#| fig-height: 8
#| fig-cap: "Color the geyser plot by another variable."
# Plot a third variable in Geyser plots.
out <- SCpubr::do_PathwayActivityPlot(sample = sample,
activities = activities,
plot_GeyserPlots = TRUE,
geyser_color.by = "seurat_clusters",
geyser_scale_type = "categorical")
out <- SCpubr::do_PathwayActivityPlot(sample = sample,
activities = activities,
plot_GeyserPlots = TRUE,
geyser_color.by = "nCount_RNA",
geyser_scale_type = "continuous")
out$geyser_plots$EGFR
#| echo: false
sample <- readRDS("/b06x-isilon/b06x-g/G703/eblanco/projects/test_SC_datasets/sc_dataset.rds")
activities <- readRDS("/b06x-isilon/b06x-g/G703/eblanco/projects/test_SC_datasets/progeny_scores_decoupleR.rds")
library(Seurat)
out <- SCpubr::do_PathwayActivityPlot(sample = sample,
activities = activities,
split.by = "split.me",
min.cutoff = -0.7,
max.cutoff = -0.7)
# Split the heatmap by another variable.
sample$split.me <- ifelse(sample$seurat_clusters %in% c("0", "3", "7"), "Group A","Group B")
out <- SCpubr::do_PathwayActivityPlot(sample = sample,
activities = activities,
split.by = "split.me",
min.cutoff = -0.7,
max.cutoff = -0.7)
out <- SCpubr::do_PathwayActivityPlot(sample = sample,
activities = activities,
split.by = "split.me",
min.cutoff = -0.7,
max.cutoff = 0.7)
out <- SCpubr::do_PathwayActivityPlot(sample = sample,
activities = activities,
split.by = "split.me",
max.cutoff = 0.7)
p <- out$heatmaps$average_scores
p
out <- SCpubr::do_PathwayActivityPlot(sample = sample,
activities = activities,
split.by = "split.me",
max.cutoff = 0.7)
p <- out$heatmaps$average_scores
p
p
out <- SCpubr::do_PathwayActivityPlot(sample = sample,
activities = activities,
split.by = "split.me",
max.cutoff = 0.2)
p <- out$heatmaps$average_scores
p
p
#| fig-width: 8
#| fig-height: 8
#| fig-cap: "Control the color scale - heatmap."
# Control the color scale
out <- SCpubr::do_PathwayActivityPlot(sample = sample,
activities = activities,
split.by = "split.me",
min.cutoff = -0.7,
max.cutoff = 0.7)
#| fig-width: 8
#| fig-height: 8
#| fig-cap: "Control the color scale - heatmap."
# Control the color scale
out <- SCpubr::do_PathwayActivityPlot(sample = sample,
activities = activities,
split.by = "split.me",
min.cutoff = 0.1,
max.cutoff = 0.7)
p <- out$heatmaps$average_scores
p
out <- SCpubr::do_PathwayActivityPlot(sample = sample,
activities = activities,
min.cutoff = 0.1,
max.cutoff = 0.7)
p <- out$heatmaps$average_scores
p
out <- SCpubr::do_PathwayActivityPlot(sample = sample,
activities = activities,
split.by = "split.me",
min.cutoff = 0.1,
max.cutoff = 0.7)
p <- out$heatmaps$average_scores
p
sample[["progeny"]] <- activities %>%
dplyr::filter(.data$statistic == "norm_wmean") %>%
tidyr::pivot_wider(id_cols = "source",
names_from = "condition",
values_from = "score") %>%
tibble::column_to_rownames("source") %>%
Seurat::CreateAssayObject()
library(magrittr)
sample[["progeny"]] <- activities %>%
dplyr::filter(.data$statistic == "norm_wmean") %>%
tidyr::pivot_wider(id_cols = "source",
names_from = "condition",
values_from = "score") %>%
tibble::column_to_rownames("source") %>%
Seurat::CreateAssayObject()
Seurat::DefaultAssay(sample) <- "progeny"
# Scale data.
sample <- Seurat::ScaleData(object = sample, verbose = FALSE)
max(sample@assays$progeny@scale.data)
#| fig-width: 8
#| fig-height: 8
#| fig-cap: "Split the heatmap."
# Split the heatmap by another variable.
sample$split.me <- ifelse(sample$seurat_clusters %in% c("0", "3", "7"), "Group A","Group B")
out <- SCpubr::do_PathwayActivityPlot(sample = sample,
activities = activities,
split.by = "split.me")
p <- out$heatmaps$average_scores
p
#| fig-width: 8
#| fig-height: 8
#| fig-cap: "Control the color scale - heatmap."
# Control the color scale
out <- SCpubr::do_PathwayActivityPlot(sample = sample,
activities = activities,
split.by = "split.me",
min.cutoff = 0.1,
max.cutoff = 0.7,
plot_FeaturePlots = TRUE,
plot_GeyserPlots = TRUE)
p <- out$heatmaps$average_scores
p
#| fig-width: 7
#| fig-height: 8
#| fig-cap: "Control the color scale - FeaturePlot and GeyserPlot"
p1 <- out$feature_plots$PI3K
p2 <- out$geyser_plots$PI3K
p <- p1 | p2
p
