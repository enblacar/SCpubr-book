# Installation guide {.unnumbered}

::: callout-warning
## Note:

The outputs of this site will show v2.0.0 once the official release is on CRAN.
:::

```{r}
#| results: "asis"
#| echo: false
source("_common.R")
```

This package can be installed using the following commands:

```{r}
#| eval: false
# From CRAN - Official release:
install.packages("SCpubr")

# From GitHub - Latest stable development version:
if(!requireNamespace("devtools", quietly = TRUE)){
  install.packages("devtools") # If not installed.
}

devtools::install_github("enblacar/SCpubr", ref = "v2.0.0-dev-stable")
```

Further packages are needed in order to run the different functions. This is normally displayed whenever you load the package for the first time in the session.

```{r}
#| eval: false
library("SCpubr")
```

<img src="images/Installation_1.png" class="mx-auto d-block" style="box-shadow: none; width: 100%"/>

In this, you will have at glance the information needed to run the package:

- Which **SCpubr version** you have installed and which is the **latest version**.
- Which **dependencies** are installed or missing.
- Which **functions** can be run with the current installed dependencies.

If this message does not appear, you can always generate it using `SCpubr::package_report()`:

```{r}
#| eval: false
SCpubr::package_report()
```

<img src="images/Installation_2.png" class="mx-auto d-block" style="box-shadow: none; width: 100%"/>

This will print the concise version of the startup message. If you want the exact same as the startup, use `startup = TRUE`.

Also, it is possible to check the packages needed on a function by function manner. For this, use `SCpubr::check_dependencies()`, providing the name of the function to check. If not, all functions will be printed.

```{r}
#| eval: false
SCpubr::check_dependencies(function_name = "do_DimPlot")
```

<img src="images/Installation_3.png" class="mx-auto d-block" style="box-shadow: none; width: 100%"/>
